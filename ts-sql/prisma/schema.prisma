// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id         Int       @id @default(autoincrement())
  uuid       String    @unique @default(uuid())
  email      String    @unique
  firstname  String    @db.VarChar(255)
  lastname   String    @db.VarChar(255)
  password   String    @db.Char(150)
  nickname   String?   @db.VarChar(255)
  posts      Post[]
  comments   Comment[]
  dob        DateTime? @db.Date
  bio        String?   @db.VarChar(255)
  followedBy User[]    @relation("UserFollows", references: [id])
  following  User[]    @relation("UserFollows", references: [id])
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")

  @@map(name: "users")
}

model Post {
  id        Int         @id @default(autoincrement())
  uuid      String      @unique @default(uuid())
  title     String      @db.VarChar(255)
  body      String      @db.VarChar(255)
  reactions Reactions[]
  comments  Comment[]
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")

  @@map(name: "posts")
}

model Comment {
  id        Int         @id @default(autoincrement())
  uuid      String      @unique @default(uuid()) // research about it
  body      String?     @db.VarChar(255)
  reactions Reactions[]
  user      User        @relation(fields: [userId], references: [id])
  userId    Int
  post      Post        @relation(fields: [postId], references: [id])
  postId    Int
  createdAt DateTime    @default(now()) @map("created_at")
  updatedAt DateTime    @updatedAt @map("updated_at")

  @@map(name: "comments")
}

enum Reactions {
  LIKE
  HAHA
  LOVE
  SAD
  SURPRISE
  ANGRY
}
